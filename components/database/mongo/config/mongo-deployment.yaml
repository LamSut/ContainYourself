apiVersion: v1
kind: ConfigMap
metadata:
  name: lamsut-init
  labels:
    app: mongo
data:
  init.js: |
    const rootUser = process.env.MONGO_INITDB_ROOT_USERNAME;
    const rootPassword = process.env.MONGO_INITDB_ROOT_PASSWORD;
    const user = process.env.MONGO_USER;
    const password = process.env.MONGO_PASSWORD;
    const database = process.env.MONGO_DB;

    db = db.getSiblingDB(database);

    db.createUser({
      user: user,
      pwd: password,
      roles: [
        {
          role: "readWrite",
          db: database
        }
      ]
    });
    db.myCollection.insertMany([
      { name: "monkey", age: 22, role: "CEO" },
      { name: "dog", age: 22, role: "Developer" },
      { name: "cow", age: 22, role: "Eunuch" },
    ]);
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: shared-pv
  labels:
    app: shared-storage
spec:
  accessModes:
    - ReadWriteMany
  capacity:
    storage: 15Gi
  nfs:
    path: /mnt/shared-storage
    server: nfs-server.example.com
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: shared-pvc
  labels:
    app: shared-storage
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 15Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  serviceName: mongo
  replicas: 3
  selector:
    matchLabels:
      app: mongo
      tier: database
  template:
    metadata:
      labels:
        app: mongo
        tier: database
    spec:
      containers:
      - image: mongo:6.0
        name: mongo
        ports:
        - containerPort: 27017
          name: mongo
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "admin"
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: "1"
        - name: MONGO_DB
          value: "zoo"
        - name: MONGO_USER
          value: "lamsut"
        - name: MONGO_PASSWORD
          value: "lamsut123"
        volumeMounts:
        - name: shared-storage
          mountPath: /data/db
        - name: init-script
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: init-script
        configMap:
          name: lamsut-init
  volumeClaimTemplates:
  - metadata:
      name: shared-storage
    spec:
      accessModes: [ "ReadWriteMany" ]
      resources:
        requests:
          storage: 15Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  type: LoadBalancer
  ports:
    - port: 27017
  selector:
    app: mongo
    tier: database
