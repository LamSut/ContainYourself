version: '3.8'

services:
  proxy:
    build:
      context: .
      dockerfile: Dockerfile.httpd
    container_name: apache_proxy
    ports:
      - "80:80"
    volumes:
      - ./php_active.conf:/usr/local/apache2/conf/extra/httpd-proxy.conf
    networks:
      - app-network
    command: >
      sh -c "echo 'Include conf/extra/httpd-proxy.conf' >> conf/httpd.conf && httpd-foreground"

  php_blue:
    build:
      context: .
      dockerfile: Dockerfile.php
    container_name: php_blue
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  php_green:
    build:
      context: .
      dockerfile: Dockerfile.php
    container_name: php_green
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  mysql:
    image: mysql:8.0
    container_name: mysql
    command: mysqld --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ''
      MYSQL_DATABASE: 'hack'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    ports:
      - "3307:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./Hack.sql:/docker-entrypoint-initdb.d/Hack.sql:ro
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "8081:80"
    depends_on:
      - mysql
    networks:
      - app-network

volumes:
  db_data:

networks:
  app-network:
